@using eSolutionTech.ViewModels.Common

@model PagedResult<eSolutionTech.ViewModels.System.Roles.RoleVm>

@{
  ViewData["Title"] = "Danh sách vai trò";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
  <ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
    <li class="breadcrumb-item active">Danh sách vai trò</li>
  </ol>
  <div class="card mb-12">
    <div class="card-header">
      <div class="row">
        <div class="col-md-6 col-xs-12">
          <a class="btn btn-success" asp-action="Create" asp-controller="Role">Tạo mới</a>
        </div>
        <div class="col-md-6 col-xs-12">
          <form asp-action="Index" method="get">
            <div class="row">
              <div class="col-md-8">
                <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
              </div>
              <div class="col-md-4">
                <button type="submit" class="btn btn-primary">Tìm</button>
                <button type="button" onclick="window.location.href='/Role/Index'" class="btn btn-secondary">Đặt lại</button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>

    <div class="card-body">
      <div class="row">
        @if (ViewBag.SuccessMsg != null)
        {
          <div id="msgAlert" class="alert alert-success" role="alert">
            @ViewBag.SuccessMsg
          </div>
        }
      </div>

      <div class="table-responsive">
        <table class="table table-striped table-bordered" width="100%" id="dataTable">
          <thead>
            <tr>
              <th class="text-center" width="35%">
                Tên vai trò
              </th>
              <th class="text-center" width="35%">
                Mô tả
              </th>
              <th class="text-center" width="30%">Hành động</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var item in Model.Items)
            {
              <tr>
                <td class="text-center">
                  @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                  @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td class="text-center">
                  <a class="btn btn-primary" href="@Url.Action("Edit", new { id = item.Id })" name="Sửa">
                    Sửa
                  </a>
                  <a class="btn btn-primary" href="#" onclick="remove('@item.Id')">Xoá</a>
                </td>
              </tr>
            }
          </tbody>
          <tfoot>
            <tr>
              <th class="text-center" width="35%">
                Tên vai trò
              </th>
              <th class="text-center" width="35%">
                Mô tả
              </th>
              <th class="text-center" width="30%">Hành động</th>
            </tr>
          </tfoot>
        </table>
      </div>
      @await Component.InvokeAsync("Pager", Model)
    </div>
  </div>
</div>

@section Scripts{
  <script type="text/javascript">
    $(document).ready(function () {
      initDataTable();
    });

    function remove(ids) {
      var url = '@Url.Action("Delete")';
      var href = '/Role/Index';
      deleteData(url, ids, href);
    };

  </script>
}